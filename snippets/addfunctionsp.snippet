// DONE!!
const Add = (num, num2) => {
  let val = isNaN(parseFloat(num)) ? 0 : parseFloat(num);
  let val2 = isNaN(parseFloat(num2)) ? 0 : parseFloat(num2);
  return val + val2;
};

describe("Add()", () => {
  // Passed
  it("With positive numbers", () => {
    expect(Helpers.Add(1, 2)).toBe(3);
  });
  // Passed
  it("With negative numbers", () => {
    expect(Helpers.Add(-1, -2)).toBe(-3);
  });
  // Passed
  it("With strings", () => {
    expect(Helpers.Add("1", "2")).toBe(3);
  });
  // Passed
  it("With boolean", () => {
    expect(Helpers.Add(false, true)).toBe(0);
  });
  // Passed
  it("With decimal", () => {
    expect(Helpers.Add(2.2, 3.2)).toBe(5.4);
  });
  // Passed
  it("With empty strings", () => {
    expect(Helpers.Add("", "")).toBe(0);
  });
});